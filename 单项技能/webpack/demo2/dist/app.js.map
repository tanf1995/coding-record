{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/router.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","installedModules","2","__webpack_require__","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","0","1","jsonpScriptSrc","setTimeout","onScriptComplete","type","target","event","onerror","onload","clearTimeout","chunk","errorType","realSrc","error","Error","request","undefined","appendChild","all","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","bind","slice","s","routes","/foo","then","assign","default","/bar","Router","_this","this","addEventListener","load","location","pathname","path","history","pushState","View","mount","body","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","key","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","router","start"],"mappings":"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","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".\" + {\"0\":\"63d756001cce765f0f53\",\"1\":\"360b24b5b8ce8d7e170e\"}[chunkId] + \".js\"\n \t}\n\n\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tfunction onScriptComplete(event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import 'regenerator-runtime/runtime';\r\n\r\nconst routes = {\r\n    '/foo': () => import('./views/foo'),\r\n    '/bar': () => import('./views/bar')\r\n}\r\n\r\n\r\nclass Router{\r\n    start(){\r\n        window.addEventListener('popstate', () => {\r\n            this.load(location.pathname);\r\n        })\r\n\r\n        this.load(location.pathname);\r\n    }\r\n\r\n    go(path){\r\n        history.pushState({}, '', path);\r\n        this.load(path);\r\n    }\r\n\r\n    async load(path){\r\n        if(path === '/') path = '/foo'\r\n\r\n        const View = (await routes[path]()).default\r\n        const view = new View();\r\n        view.mount(document.body)\r\n    }\r\n}\r\n\r\nexport default new Router();","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar regeneratorRuntime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n","import router from './router';\r\n\r\nrouter.start();"],"sourceRoot":""}